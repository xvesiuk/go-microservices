// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/post": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "post"
                ],
                "parameters": [
                    {
                        "description": "post payload",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/posthandler.postMutationBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/rest.Response-posthandler_postMutationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.ResponseDefault"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/rest.ResponseDefault"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.ResponseDefault"
                        }
                    }
                }
            }
        },
        "/post/{postID}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "post"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "post id",
                        "name": "postID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.Response-posthandler_postQueryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.ResponseDefault"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/rest.ResponseDefault"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.ResponseDefault"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "posthandler.postMutationBody": {
            "type": "object",
            "required": [
                "content",
                "title"
            ],
            "properties": {
                "content": {
                    "type": "string",
                    "maxLength": 300
                },
                "title": {
                    "type": "string",
                    "maxLength": 50
                }
            }
        },
        "posthandler.postMutationResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "posthandler.postQueryResponse": {
            "type": "object",
            "properties": {
                "author_id": {
                    "type": "integer"
                },
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "rest.Response-posthandler_postMutationResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/posthandler.postMutationResponse"
                },
                "error": {
                    "type": "boolean"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "rest.Response-posthandler_postQueryResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/posthandler.postQueryResponse"
                },
                "error": {
                    "type": "boolean"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "rest.ResponseDefault": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "boolean"
                },
                "msg": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8001",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Swagger Example API",
	Description:      "This is a sample server celler server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
